{"version":3,"file":"static/webpack/static/development/pages/_app.js.90c6082c0eabcba12d85.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import React from \"react\";\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport App, {Container} from \"next/app\";\nimport withRedux from \"next-redux-wrapper\";\nimport css from '../static/css/reset.less';\n\n\nconst reducer = (state = {user: ''}, action) => {\n    switch (action.type) {\n        case 'LOGIN':\n          return {...state, user: action.payload};\n        case 'UPDATESTORE':\n          return {...state, user: {...state.user, store: action.payload}};\n    }\n};\n\n/**\n* @param {object} initialState\n* @param {boolean} options.isServer indicates whether it is a server side or client side\n* @param {Request} options.req NodeJS Request object (not set when client applies initialState from server)\n* @param {Request} options.res NodeJS Request object (not set when client applies initialState from server)\n* @param {boolean} options.debug User-defined debug mode param\n* @param {string} options.storeKey This key will be used to preserve store in global namespace for safe HMR\n*/\nconst makeStore = (initialState, options) => {\n    return createStore(reducer, initialState);\n};\n\nclass MyApp extends App {\n\n    static async getInitialProps({Component, ctx}) {\n\n        const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n\n        return {pageProps};\n\n    }\n\n    render() {\n        const {Component, pageProps, store} = this.props;\n        return (\n          <html>\n            <head>\n              <title>Lambda Map</title>\n            </head>\n            <body>\n              <Container>\n                  <Provider store={store}>\n                      <Component {...pageProps} />\n                  </Provider>\n              </Container>\n            </body>\n          </html>\n        );\n    }\n\n}\n\nexport default withRedux(makeStore)(MyApp);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAMA;AAEA;;;;;;;;;;AAQA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAUA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;AAxBA;AACA;AACA;;;;;;AAAA;AACA;;;;;;;AADA;AACA;;AADA;AAEA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAPA;AACA;AA6BA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}